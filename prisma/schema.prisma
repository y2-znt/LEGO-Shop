datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String    @id @default(cuid())
  name             String?
  email            String    @unique
  emailVerified    DateTime?
  image            String?
  hashedPassword   String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  role             Role      @default(USER)
  accounts         Account[]
  orders           Order[]
}

model Product {
  id        String      @id @default(cuid())
  name      String
  price     Float
  inStock   Boolean
  image     String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  orderItems OrderItem[]
}

model Order {
  id                String      @id @default(cuid())
  userId            String
  amount            Float
  currency          String
  status            OrderStatus @default(PENDING)
  checkoutSessionId String?     @unique
  createdAt         DateTime    @default(now())
  orderItems        OrderItem[]   @relation("OrderToItems")
  user              User        @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model OrderItem {
  id        String   @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  createdAt DateTime @default(now())
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade, name: "OrderToItems")
  product   Product  @relation(fields: [productId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  PAID
  CANCELLED
  FAILED
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}
